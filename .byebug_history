c
   10:       html: html }c
    9:       data: data,
ActionCable.server.broadcast "task_list_#{task.list_id}", {
data["currentList"]= currentList
(!currentList.blank?)? render_task(task,currentList) : ""
list
currentList
data
task
c
data["list_id"]
List.current
self.t_blockers.count
 self.list_id
self.user_id
self.user.all_task.id
self.user.num_incompleted_tasks(self.user.all_task)
(!is_blocker?) ? self.user.num_incompleted_tasks(List.find(self.list_id)) : ''
self.id
is_blocker?
c
task.list_id
c
task.id
c
currentList
list
currentList
c
list
currentList
task
c
currentList
c
current_list
current_lis
c
currentList
c
currentList
task
c
currentList
data
task
c
 List.current 
html =TasksController.render(partial: "tasks/task", locals: {"task": task, "user": task.user, "list": task.list, "currentList": List.current }).squish
data
task
c
cc
c
task.completed_at
c
@task.update_columns(completed_at: nil)
c
status ='incomplete'
num = task.user.num_incompleted_tasks(task.list)
c
@task
c
completed_at = @task.completed_at.to_date
c
completed_at = @task.completed_at.to_date
c
completed_at = @task.completed_at.to_date
c
completed_at = @task.completed_at.to_date
c
@task
2task
@task.completed_at
===========================================================================================================================
============================================================================================================================
====================================================================================================================================================
============================================================================================================================================
c
cc
c
