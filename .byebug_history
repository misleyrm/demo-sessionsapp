c
doc = Nokogiri::HTML(task_params[:detail],nil,"UTF-8")
c
task_params[:detail]
b=Liquid::Template.parse(task_params[:detail]).render
Liquid::Template.parse(task_params[:detail]).render
c
List.current
c
params[:currentList]
params
params[:currentList]
c
params
params[:currentList]
c
List.current = List.find(task_params[:currentList])
c
task_params[:currentList]
params[:detail]
params[:currentList]
params[:currentList]currentList
params[:currentList]
 List.current = List.find(params[:currentList])
params
c
params[:currentList]
List.find(params[:currentList])
params
c
@list
current_list
params
c
params
c
List.current
c
List.current = current_list
c
current_list
List.current
c
list
c
@user = User.create(user_params)
User.all
(@user = User.find_by_email(user_params[:email]))
c
List.find(28)
c
List.find(id).all_tasks
id
c
List.find(id).all_tasks
id
c
List.find(id).all_tasks
List.find(id)
id
c
cc
c
cc
c
cc
c
====================================================================================================
c
@user
c
@user.activated?
@user = User.find_by(email: params[:password_reset][:email].downcase)
c
@list.collaboration_users
@list.collaboration_users + owner 
@list.collaboration_users.or(owner)
owner  =  User.where('id' => @list.user_id)
@list.collaboration_users
c
@result
c
@result
c
