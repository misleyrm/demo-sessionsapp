c
@active_collaborations
c
current_list
params
c
current_list
params
c
current_list
params
c
session[:list_id]
current_list
curent_list
params
c
current_list
params
c
List.current
current_list
@_current_list
params
c
current_list
List.current
params
c
params
c
params
c
params[:mention_by].tr('[]', '').split(',').map(&:to_i)
params[:mention_by]
c
params[:mention_by].to_r
params[:mention_by].to_arr
params[:mention_by]
c
cc
c
"Task id: #{task_id} created"
c
html = (!currentList.blank?)? render_task(task,currentList) : ""
c
email
c
 list = (task.is_blocker?) ? task.parent_task.list : task.list
task.is_blocker?
task.user
task
user = task.parent_task.user
 html = (!currentList.blank?)? render_task(task,currentList) : ""
list
currentList
data
task
c
email.sub!(%r{^\+},"")
email
c
"+info".sub!(%r{^\+},"")
"+info".sub!(%r{^/\+},"")
"+info".sub!(%r{^/+},"")
"1+info".sub!(%r{^1},"")
email.sub!(%r{^+},"")
email
email.sub!(%r{^1},"")
a.delete_prefix("+")
a = String.try_convert(email) 
a = String.try_convert("str") 
String.try_convert(email)
String.try_convert(email)! 
"hello".delete_prefix("hel")
a= email.delete_prefix("+")
a= email.sub!("/^+/", '')
a= email
email
c
tag_emails
c
tag_emails
ag_emails
email.sub!(/^+/, '')
email.sub!(/^"+/, '')
email.sub!(/^+/, '')
email
email.sub!(/^+/, '')
c
 tag_emails
c
 tag_emails
c
self.detail.scan(/[+]+[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b/i)
self.detail.scan(/\[+]+[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b/i)
self.detail.scan(/\b[+]+[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b/i)
self.detail
c
tag_emails
=================================================================
clear
c
@invitation.recipient = User.find(2)
(!@token.nil?) && (@user == @invitation.recipient)
@token = params[:invitation_token]
current_user
c
   10:       html: html }c
    9:       data: data,
ActionCable.server.broadcast "task_list_#{task.list_id}", {
data["currentList"]= currentList
(!currentList.blank?)? render_task(task,currentList) : ""
list
currentList
data
task
c
data["list_id"]
List.current
self.t_blockers.count
 self.list_id
self.user_id
self.user.all_task.id
self.user.num_incompleted_tasks(self.user.all_task)
(!is_blocker?) ? self.user.num_incompleted_tasks(List.find(self.list_id)) : ''
self.id
is_blocker?
c
task.list_id
c
task.id
c
currentList
list
currentList
c
list
currentList
task
c
currentList
c
current_list
current_lis
c
currentList
c
currentList
task
c
currentList
data
task
c
 List.current 
html =TasksController.render(partial: "tasks/task", locals: {"task": task, "user": task.user, "list": task.list, "currentList": List.current }).squish
data
task
c
cc
c
task.completed_at
c
@task.update_columns(completed_at: nil)
c
status ='incomplete'
num = task.user.num_incompleted_tasks(task.list)
c
@task
c
completed_at = @task.completed_at.to_date
c
completed_at = @task.completed_at.to_date
c
completed_at = @task.completed_at.to_date
c
completed_at = @task.completed_at.to_date
c
@task
2task
@task.completed_at
===========================================================================================================================
============================================================================================================================
====================================================================================================================================================
============================================================================================================================================
c
cc
c
