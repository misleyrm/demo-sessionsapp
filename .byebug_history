c
flash.now[:danger] = "Email sent with password reset instructions"
 @user.send_password_reset_email
 @user.create_reset_digest
(@user && @user.activated?)
 @user = User.find_by(email: params[:password_reset][:email].downcase)
@user.create_reset_digest
c
@user.send_activation_email
 @user.update_activation_digest
c
 BCrypt::Password.new(digest).is_password?(token)
 digest = send("#{attribute}_digest")
c
BCrypt::Password.new(digest).is_password?(token)
digest = send("#{attribute}_digest")
c
params[:id]
user && !user.activated? && user.authenticated?(:activation, params[:id])
c
@user.send_activation_email
@user.create_activation_digest
@user.activation_token = User.new_token
 @user = User.find_by(email:params[:email])
c
\c
@user.new_token
@user.new-token
@user
@user.activation_token
c
token
 BCrypt::Password.new(digest).is_password?(token)
digest.nil?
return false if digest.nil?
digest = send("#{attribute}_digest")
attribute
c
params
c
UserMailer.account_activation(@user).deliver_now
@user.create_activation_digest
@user.activation_token = User.new_token
 @user = User.find_by(email:params[:email])
c
params
user.authenticated?(:activation, params[:id])
user.activated?
user 
user && !user.activated? && user.authenticated?(:activation, params[:id])
c
 @user.create_activation_digest
@user = User.find_by(email:params[:email])
c
 @user.create_activation_digest
@user = User.find_by(email:params[:email])
c
 @user.activation_token
UserMailer.account_activation(@user).deliver_now
@user = User.find_by(email:params[:email])
c
user.authenticated
user.authenticated?
user.authenticated?(:activation, params[:id])
!user.activated?
user = User.find_by(email: params[:email])
c
users_resend_activation_url(:email => @user.email)
@user
(@user && @user.activated?)
c
UserMailer.account_activation(@user).deliver_now
 @user.activation_token = User.new_token
 @user = User.find_by(email:params[:email])
c
view_context.link_to("activation", users_resend_activation_url(:email => @user.email), :method => :post )
 Your account is not activated, click here to re-send #{view_context.link_to("activation", users_resend_activation_url(:email => @user.email), :method => :post )
@user
c
 UserMailer.account_activation(@user).deliver_now
@user.activation_token = User.new_token
 @user = User.find_by(email:params[:email])
c
user_params
c
-----------------------------------------------------------------------------------------
c
 @user.update(:avatar => user_params[:avatar])
c
 @task.update_attribute(:deadline, '')
-----------------------------------------------------------------------------------------------------------
c
@list
0000000000000000000000000000000000000000000000000000000000000000000000
c
@list
c
@list
c
@list
@list.update_attributes(list_params)
@list
params
c
blocker
c
params
c
params
c
exit
params
@task.update_attributes!(task_params)
@task.is_blocker?
@task
task_params
params
c
@user.current_step == "security"
@user.current_step = (user_params[:current_step].present?)? user_params[:current_step] : ""
c
@t_blocker
@t_blockers
TaskMailer.mentioned_in_blocker(email, sender, @t_blocker).deliver_now
 sender = current_user
email
c
TaskMailer.mentioned_in_blocker(email, current_user, @t_blocker).deliver_now
TaskMailer.mentioned_in_blocker(user, current_user, @t_blocker).deliver_now
email
c
 TaskMailer.mentioned_in_blocker(email, @t_blocker).deliver_now
 user = User.find_by_email(email)
email
c
params['tags_emails'].split(',')
params['tags_emails'].split(',').map(&:to_i)
params
c
User.search(params[:term])
c
@users = User.search(params[:term])
c
@users.count
@users = User.search(params[:term])
params
c
User.search(params[:term])
c
params
c
params
c
params
c
session[:list_id]
params
c
cc
c
session[:list_id]
@_current_list
params
c
params
c
cc
c
params
c
params
c
params
c
params
@_current_list
c
@_current_list
c
@_current_list
c
params
c
params
c
@_current_list
c
@_current_list
params
c
params
@_current_list
c
params
@_current_list
c
@_current_list
params
c
@_current_list
params
c
cc
c
user.activated
!user.activated?
user && !user.activated? && user.authenticated?(:activation, params[:id])
user = User.find_by(email: params[:email])
c
cuser = User.find_by(email: params[:email])
c
cc
c
cc
c
cc
c
params
c
params
  list_id  = session[:list_id]
(!params[:id].blank?) && (params[:controller]=="lists") || (!params[:list_id].blank?)
c
params
cparams
c
cc
c
list_id  = session[:list_id]
params
c
 list_id  = (params[:list_id].present?) ? params[:list_id] : params[:id]
params
(!params[:id].blank?) && (params[:controller]=="list") || (!params[:list_id].blank?)
c
(!params[:id].blank?) && (params[:controller]=="list") || (!params[:list_id].blank?)
params
c
params
c
params
c
params
c
params
c
params
list_id = session[:list_id]
c
list_id = session[:list_id]
c
list_id = session[:list_id]
c
list_id = session[:list_id]
c
list_id = session[:list_id]
