jQuery.fn.submitOnCheck = function() {
  this.find('input[type=submit]').remove();
  this.find('input[type=checkbox]').click(function() {
    $(this).parent('form').submit();
  });
  return this;
};

function handler(ev) {
    var target = $(ev.target);
    var elId = target.attr('id');
    // alert('The mouse was over'+ elId );
};



$(document).on('click','ul.user-lists li a', {}, function(event){
  event.preventDefault();
  var $this = $(this);
  if (!$this.parent().is("#ms-add")){
      $("ul.user-lists li.active").removeClass('active');
      $this.parent().addClass('active');

      var id = $this.attr('id');
      $("#form_date").attr('action', '/lists/' + id);
      var date = $('#form_date').val() ? $('#form_date').val(): new Date();

      $.ajax({
        complete:function(request){
           $('.tooltipped').tooltip({delay: 50});
           $('div[id^="incomplete_tasks_"]').each(function (){
             mySortable($(this));
           })
        },
        data:'date='+ date,
        dataType:'script',
        type:'get',
        url: $this.attr('data-href')
      })
  }

});


$(document).on('turbolinks:load',function(){

  $(".close").onclick = function(){

        // Get the parent of <span class="closebtn"> (<div class="alert">)
        var div = this.parentElement;

        // Set the opacity of div to 0 (transparent)
        div.style.opacity = "0";

        // Hide the div after 600ms (the same amount of milliseconds it takes to fade out)
        setTimeout(function(){ div.style.display = "none"; }, 600);
    };

    $('ul.tabs').tabs();

    $("form#user-edit-avatar").submit(function(e){
                 e.preventDefault(e);
             });

    $('div.side-nav ul.user-lists li a').on('ajax:complete', function(event, xhr, settings) {
          $('input.deadline-datepicker.hidden-datepicker').hover(handlerIn, handlerOut);
          deadlineDatepicker($('input.deadline-datepicker'));
    });

    $("ul#collaboration-users li a").on('ajax:complete', function(event, xhr, settings) {
          $('input.deadline-datepicker.hidden-datepicker').hover(handlerIn, handlerOut);
          $('div[id^="incomplete_tasks_"]').each(function (){
            mySortable($(this));
          })
          deadlineDatepicker($('input.deadline-datepicker'));
      });

    $("#application-date form.edit_list").on('ajax:complete', function(event, xhr, settings) {
          $('input.deadline-datepicker.hidden-datepicker').hover(handlerIn, handlerOut);
          deadlineDatepicker($('input.deadline-datepicker'));
          $('div[id^="incomplete_tasks_"]').each(function (){
            mySortable($(this));
          })
      });

    // $("input.update-avatar-submit").on('click', function(event) {
    //   event.preventDefault();
    //       console.log("innnnnnnnnnnnnn");
    //   });

  $('input.deadline-datepicker.hidden-datepicker').hover(handlerIn, handlerOut);

  deadlineDatepicker($('input.deadline-datepicker'));

  // dropdown-button
  $('.dropdown-button').dropdown({
      inDuration: 300,
      outDuration: 225,
      hover: true, // Activate on hover
      belowOrigin: true, // Displays dropdown below the button
      alignment: 'right' // Displays dropdown with edge aligned to the left of button
    });

    // dropdown-button
    $('.dropdown-button2').dropdown({
        inDuration: 300,
        outDuration: 225,
        hover: false, // Activate on hover
        belowOrigin: true, // Displays dropdown below the button
        alignment: 'right' // Displays dropdown with edge aligned to the left of button
      });

  $(document).on("click", '.dropdown-button',function(e){
     e.preventDefault();
     var id = "#"+ $(this).data('activates');
     $('.dropdown-list').not($(id)).removeClass('show');
     $(id).toggleClass('show');
  })

  // Close the dropdown menu if the user clicks outside of it
  window.onclick = function(event) {
    // console.log('window onclick');
    if (!($(event.target).parent('.dropdown-button').size() > 0)) {
      var dropdowns = document.getElementsByClassName("dropdown-list");
      var i;
      for (i = 0; i < dropdowns.length; i++) {
        var openDropdown = dropdowns[i];
        if (openDropdown.classList.contains('show')) {
          openDropdown.classList.remove('show');
        }
      }
    }
  }

 // Show action-menu in blockers when mouseover
  $(document).on("mouseover", ".permitted div.blocker", function(e){
     $(this).addClass("active");
  });
  $(document).on("mouseleave", ".permitted div.blocker", function(e){
     $(this).removeClass("active");
  });

    // dropdown-button
    $(document).on("click", '.dropdown-button2',function(e){
       e.preventDefault();
       var id = "#"+ $(this).data('activates');
       $('.dropdown-list').not($(id)).removeClass('show');
       $(id).toggleClass('show');
    })

    // Close the dropdown menu if the user clicks outside of it
    window.onclick = function(event) {
      if (!($(event.target).parent('.dropdown-button2').size() > 0)) {
        var dropdowns = document.getElementsByClassName("dropdown-list");
        var i;
        for (i = 0; i < dropdowns.length; i++) {
          var openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
          }
        }
      }
    }

    // Modal for view
    var modal_holder_selector;
     modal_holder_selector = "#modal-holder";
     $(document).on("click", "[data-behavior='modal']", function() {
       var location;
       location = $(this).attr("href");
       $.get(location, function(data) {
           $(modal_holder_selector).html(data);
            $('.modal').modal();
           return $("#ms-modal-dialog").modal("open");
       })
       return false;
     })

     return $(document).on("ajax:success", "[data-behavior='modal-form']", function(event, data, status, xhr) {
         var url;
         url = xhr.getResponseHeader("Location");
         if (url) {
           window.location = url;
         } else {
           $("#ms-modal-dialog").modal("close");
         }
           return false;
     })

      /* end modal*/
     $(".sidebar-collapse").sideNav();
      // Initialize collapse button
     $(".button-collapse").sideNav();

     $('select').material_select();
     $('.modal-trigger').modal();
      // MODAL
      $('#ms-modal-applications').modal({
           dismissible: false, // Modal can be dismissed by clicking outside of the modal
           opacity: .5, // Opacity of modal background
           inDuration: 300, // Transition in duration
           outDuration: 200, // Transition out duration
           startingTop: '4%', // Starting top style attribute
           endingTop: '150px', // Ending top style attribute
           ready: function(modal, trigger) { // Callback for Modal open. Modal and trigger parameters available.
             console.log(modal, trigger);
           },
           complete: function() {  } // Callback for Modal close
         })

        var pgurl = window.location.href.substr(window.location.href.lastIndexOf("/")+1);
        $("#stand-up ul li a").each(function(){
               if($(this).attr("href") == pgurl || $(this).attr("href") == '' )
               $(this).addClass("active");
          })

        $("#stand-up ul.menu li a").hover(function(){
            change_img_nav(this);
          }, function(){
            change_img_nav(this)
         });

        $('#new_user').validate({
            debug: true,
            rules: {
            'user[avatar]': {required: true},
            'user[first_name]': {required: true},
            'user[last_name]': {required: true},
            'user[email]': {required: true, email: true},
            'user[password]': {required: true, minlength: 6},
            'user[password_confirmation]': {required: true, equalTo: '#user_password'}
            }
            // console.log('in');
          });




}); /* end of $(document).on('turbolinks:load',function(){*/

  // CLICK IN CANCEL BUTTON IN CHANGE OWNERSHIP
  $(document).on("click", "#user_ownership_change a.btn-cancel", function() {
       var $select = $(this).closest('form').find('select');
       var value= $select.data("list-owner");
       $(this).closest('form').find("input[type=password], current_password").val("");
       $select.find('option[value="'+value+'"]').prop('selected', true);
       $select.material_select();
       $(this).parents($('.collapsible')).collapsible('close', 0);
       $("#list_owner").val($("#list_owner option:first").val());
 });

   // END CLICK IN CANCEL BUTTON IN CHANGE OWNERSHIP

// Functions

function handlerIn(){
    $(this).next( ".i-btn-datepicker" ).css("color","#55C2B9 !important");
};
function handlerOut(){
   var color;
   if ($(this).next( ".i-btn-datepicker" ).hasClass("md-red")){
        color = 'rgb(238, 70, 114, 0.54)';
   } else {
         color = 'rgb(0, 0, 0, 0.26)';
   }
    $(this).next( ".i-btn-datepicker" ).css("color",color);
};

function change_img_nav(e){
  var img = $(e).find("img#icon-change");
  var img_path = img.attr('src');

  if ((img.length) && (img_path.lastIndexOf("lightblue")== -1)){
    img_path = img_path.substr(0,img_path.lastIndexOf("."))+'-lightblue.png';
    $(e).css('color','#92daee');
    img.attr('src',img_path);
  } else if (img.length){
      img_path = img_path.substr(0,img_path.lastIndexOf("-lightblue"))+'.png';
      img.attr('src',img_path);
      $(e).css('color','#fff');
    }
}

function uploadAvatar(){

  // Get a reference to the fileList
  var files = !!this.files ? this.files : [];
  var element = $(this);

  // If no files were selected, or no FileReader support, return
  if ( !files.length || !window.FileReader ) {
    element.parents("#user-edit-avatar").find('a#btn-user-avatar-upload').addClass('disable-links');
    return} ;

  // Only proceed if the selected file is an image
  if ( /^image/.test( files[0].type ) ) {
      // Create a new instance of the FileReader
      var reader = new FileReader();

      // Read the local file as a DataURL
      reader.readAsDataURL( files[0] );

      // When loaded, set image data as background of div
      reader.onloadend = function(){
          element.parents(".ms-upload-avatar").css("background-image", "url(" + this.result + ")");
          element.parents(".ms-upload-avatar").find('div.mousehover').addClass('active').removeClass('hover');
          element.parents(".ms-upload-avatar").find('span.ms-avatar-ini').addClass('hidden').removeClass('show');
          element.parents("#user-edit-avatar").find('a#btn-user-avatar-upload').removeClass('disable-links');

      }
  }
}

// $(document).on("mouseout", 'label[for="user_avatar"]', mouseOutAvatar);
// $(document).on("mouseover", 'label[for="user_avatar"]', mouseOverAvatar);

function mouseOutAvatar(){
  if ($('div.mousehover',this).hasClass('active')){
      $('div.mousehover',this).toggleClass('hover');
    }
}

function mouseOverAvatar(){

  if (!$('div.mousehover', this ).hasClass('hover')){
    $( 'div.mousehover', this).toggleClass( 'hover' );
  }
}

function deadlineDatepicker(e){
  // e.each(function(){
    $(e).datepicker({
      altFormat: "D, d MM",
      minDate: 0,
      showButtonPanel: true,
      onClose: function(){
        var date = $(this).datepicker('getDate');
        if (date != null){
          $.ajax({
            complete:function(request){},
            data:'deadline='+ date,
            dataType:'script',
            type:'PATCH',
            url: $(this).siblings("i.material-icons").attr('data-href')
          })
        }
      },
      beforeShow: function( input ) {
          var href = $(this).siblings("i.material-icons").attr("data-href-delete-deadline");
          setTimeout(function() {
              var buttonPane = $( input )
                  .datepicker( "widget" )
                  .find( ".ui-datepicker-buttonpane" );

              $( "<button>", {
                  text: "Clear",
                  click: function() {
                  //Code to clear your date field (text box, read only field etc.) I had to remove the line below and add custom code here
                      $.datepicker._clearDate( input );
                      var date = null;
                      $.ajax({
                        complete:function(request){},
                        data:'deadline='+ date,
                        dataType:'script',
                        type:'PATCH',
                        url: href
                      })
                  }
              }).appendTo( buttonPane ).addClass("ui-datepicker-clear ui-state-default ui-priority-primary ui-corner-all");
          }, 1 );
      },
      onChangeMonthYear: function( year, month, instance ) {
          setTimeout(function() {
              var buttonPane = $( instance )
                  .datepicker( "widget" )
                  .find( ".ui-datepicker-buttonpane" );

              $( "<button>", {
                  text: "Clear",
                  click: function() {
                  //Code to clear your date field (text box, read only field etc.) I had to remove the line below and add custom code here
                      $.datepicker._clearDate( instance.input );
                  }
              }).appendTo( buttonPane ).addClass("ui-datepicker-clear ui-state-default ui-priority-primary ui-corner-all");
          }, 1 );
      }
    });
  // });

};

'use strict';

(function(d){
  	var mL = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  	var mS = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];

    var wL = [ 'Sunday','Monday','Tuesday','Wednesday','Thursday', 'Friday','Saturday'];
  	var wS = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];

  	d.prototype.getLongMonth = d.getLongMonth = function getLongMonth (inMonth) {
  		return gM.call(this, inMonth, mL);
  	}

  	d.prototype.getShortMonth = d.getShortMonth = function getShortMonth (inMonth) {
  		return gM.call(this, inMonth, mS);
  	}

    d.prototype.getLongDayWeek = d.getLongDayWeek = function getLongDayWeek (inWeek) {
  		return gD.call(this, inWeek, wL);
  	}

  	d.prototype.getShortDayWeek = d.getShortDayWeek = function getShortDayWeek (inWeek) {
  		return gD.call(this, inWeek, wS);
  	}

  	function gM(inMonth, arr){
    		var m;

    		if(this instanceof d){
    			m = this.getMonth();
    		}
    		else if(typeof inMonth !== 'undefined') {
    			m = parseInt(inMonth,10) - 1; // Subtract 1 to start January at zero
    		}

    		return arr[m];
  	}

    function gD(inWeek, arr){
  		var m;

  		if(this instanceof d){
  			m = this.getDay();
  		}
  		else if(typeof inWeek !== 'undefined') {
  			m = parseInt(inWeek,10) ; // Subtract 1 to start January at zero
  		}

  		return arr[m];
  	}
})(Date);

function toValidDate(datestring){
  return datestring.replace(/(\d{2})(\/)(\d{2})/, "$3$2$1");
}


$.fn.animateRotate = function(ini,angle, duration, easing, complete) {
    var args = $.speed(duration, easing, complete);
    var step = args.step;
    return this.each(function(i, e) {
        args.step = function(now) {
            $.style(e, 'transform', 'rotate(' + now + 'deg)');
            if (step) return step.apply(this, arguments);
        };
        $({deg: ini}).animate({deg: angle}, args);
    });
};

function msCollapsible(clase){
  $('.'+ clase).collapsible({
      onOpen: function(el) {
          var $this = el,
          $panel_headers = $this.find('div.collapsible-header'),
          $arrow =   $panel_headers.find('i.material-icons.ms-open-button');
          $arrow.animateRotate(0,90, 250, "linear");
       }, // Callback for Collapsible open
      onClose: function(el) {
        var $this = el,
        $panel_headers = $this.find('div.collapsible-header'),
        $arrow =   $panel_headers.find('i.material-icons.ms-open-button');
        $arrow.animateRotate(90,0, 250, "linear");
       } // Callback for Collapsible close
    });

}
